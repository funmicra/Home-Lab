---
# ──────────────────────────────────────────────
# site.yml — Entry‑point playbook for Home‑Lab
# ──────────────────────────────────────────────

- name: Deploy **all** docker‑compose stacks from GitHub repo funmicra/Home‑Lab
  hosts: homelab
  become: true
  vars_files:
    - vars/main.yml            # defines compose_stacks list (just 1 item now)
  roles:
    - common
    - docker
    - compose_stacks


# ──────────────────────────────────────────────
# roles/common/tasks/main.yml — baseline utilities
# ──────────────────────────────────────────────

- name: Ensure base CLI utilities are installed
  ansible.builtin.package:
    name:
      - vim
      - curl
      - htop
      - git                       # for cloning repos
    state: present
    update_cache: true


# ──────────────────────────────────────────────
# roles/docker/tasks/main.yml — Docker engine + Compose plugin
# ──────────────────────────────────────────────

- name: Install Docker Engine and docker‑compose‑plugin
  ansible.builtin.package:
    name:
      - docker.io
      - docker-compose-plugin     # modern Compose v2 binary
    state: present
    update_cache: true
    autoremove: true

- name: Enable and start Docker service
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

- name: Ensure docker group exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"   # Or specify another username
    groups: docker
    append: true

# ──────────────────────────────────────────────
# roles/compose_stacks/tasks/main.yml — Clone repo & deploy **all** compose files
# ──────────────────────────────────────────────

- name: Ensure parent directory exists
  ansible.builtin.file:
    path: /opt/appdata
    state: directory
    mode: '0755'

- name: Sync Home‑Lab repository ({{ item.name }})
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "/opt/appdata/{{ item.name }}"
    version: "{{ item.version | default('main') }}"
    update: yes
  loop: "{{ compose_stacks }}"
  loop_control:
    label: "{{ item.name }}"
  register: repo_sync

- name: Find docker‑compose files in {{ item.name }}
  ansible.builtin.find:
    paths: "/opt/appdata/{{ item.name }}/{{ item.compose_subdir | default('') }}"
    patterns: '^docker-compose.*\.ya?ml$'
    recurse: yes
  loop: "{{ compose_stacks }}"
  loop_control:
    label: "{{ item.name }}"
  register: found_compose

- name: Build list of unique project directories
  ansible.builtin.set_fact:
    project_dirs: "{{ project_dirs | default([]) + (item.files | map(attribute='path') | map('dirname') | list) }}"
  loop: "{{ found_compose.results }}"

- name: Remove duplicate project directories
  ansible.builtin.set_fact:
    project_dirs: "{{ project_dirs | unique }}"

- name: Bring up each compose project
  community.docker.docker_compose:
    project_src: "{{ item }}"
    state: present
    pull: true
    restarted: true
  loop: "{{ project_dirs }}"
  loop_control:
    label: "{{ item | basename }}"


# ──────────────────────────────────────────────
# vars/main.yml — Specify the single Git repo and sub‑directory
# ──────────────────────────────────────────────

compose_stacks:
  - name: home-lab
    repo: https://github.com/funmicra/Home-Lab.git
    version: main
    compose_subdir: "compose-projects"   # path inside repo containing compose projects

# Nothing else to edit — playbook auto‑discovers every docker‑compose*.yml
# under "My Docker Stacks/" (recursively) and deploys each one.
# ──────────────────────────────────────────────
